name: Build and Push Docker Image

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 安裝正確版本的 .NET
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Restore dependencies
        run: dotnet restore SchemaMigrationTool.sln

      # 執行測試並收集 coverage 資料
      - name: Run Tests with Coverage (Coverlet)
        run: dotnet test SchemaMigrationTool.Tests --collect:"XPlat Code Coverage" --logger "console;verbosity=detailed"

      # 安裝轉換工具，產出 SonarQube 格式的 coverage report
      - name: Convert Coverage to SonarQube Format
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.1.26
          export PATH="$PATH:/home/runner/.dotnet/tools"
          reportgenerator -reports:"./SchemaMigrationTool.test/TestResults/*/coverage.cobertura.xml" -targetdir:"./coverage-report" -reporttypes:SonarQube

      # 執行 SonarQube 掃描
      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectKey=Gordon240722_SchemaMigrationTool
            -Dsonar.organization=gordon240722
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.sources=.
            -Dsonar.cs.opencover.reportsPaths=coverage-report/SonarQube.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build Docker image
        run: |
          IMAGE_NAME=ghcr.io/gordon240722/schema-migrator
          docker build -t $IMAGE_NAME:latest .

      - name: Push Docker image
        run: |
          IMAGE_NAME=ghcr.io/gordon240722/schema-migrator
          docker push $IMAGE_NAME:latest
